openapi: 3.0.3
info:
  description: |-
    Es la descripción del microservicio de Usuarios para la aplicacion de video online.
    En el se definen las operaciones que se realizarán sobre los usuarios asi como sus propiedades.
  title: TubeFlix - Gestion de Usuarios - OpenAPI 3.0
  version: 1.0.0
servers:
- url: /
tags:
- description: Operaciones sobre los usuarios
  name: user
paths:
  /user:
    post:
      description: Solo se podra hacer si el usuario ha iniciado sesion.
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Crea un objeto User
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: operacion exitosa
      summary: Crea un usuario
      tags:
      - user
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: user
  /user/login:
    get:
      description: ""
      operationId: loginUser
      parameters:
      - description: El nombre de usuario para iniciar sesion
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Contrasena necesaria para el login
        explode: true
        in: query
        name: password
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: operacion exitosa
        "400":
          description: Nombre de usuario o contrasena no valido
      summary: Se inicia sesion en el sistema
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
  /user/logout:
    get:
      description: ""
      operationId: logoutUser
      parameters: []
      responses:
        default:
          description: operacion exitosa
      summary: Se cierra sesion en el usuario actual
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
  /user/{username}:
    delete:
      description: Solo se puede hacer si el usuario ha iniciado sesion.
      operationId: deleteUser
      parameters:
      - description: El nombre del usuario a borrar
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: operacion exitosa
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
      summary: Borrar usuario
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
    get:
      description: ""
      operationId: getUserByName
      parameters:
      - description: 'El nombre por el que se busca. Usar user1 para testing. '
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: operacion exitosa
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
      summary: Hacer un get del usuario por el nombre
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
    put:
      description: Solo puede utilizarse si el usuario ha iniciado sesion.
      operationId: updateUser
      parameters:
      - description: el nombre del usuario a modificar
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Modifica el usuario en la aplicacion
      responses:
        "200":
          description: operacion exitosa
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
      summary: Actualizar usuario
      tags:
      - user
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: user
  /user/{username}/followers:
    get:
      description: ""
      operationId: getFollowers
      parameters:
      - description: 'El nombre por el que se requieren sus seguidores '
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: operacion exitosa
      summary: Se obtiene una lista de seguidores del usuario.
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
  /user/{username}/following:
    get:
      description: ""
      operationId: getFollowing
      parameters:
      - description: 'El nombre por el que se los usuarios que sigue '
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: operacion exitosa
      summary: Se obtiene una lista de usuarios seguidos por el usuario.
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
components:
  schemas:
    User:
      example:
        lastName: James
        country: Spain
        role: User
        birthdate: 1990-01-01
        bio: Esta es la descripcion de user1
        uploadedVideos:
        - 101
        - 101
        watchedVideos:
        - 202
        - 202
        firstName: John
        profilePicture: https://example.com/images/user1.jpg
        password: "12345"
        followers:
        - 15
        - 15
        following:
        - 20
        - 20
        id: 10
        email: john@email.com
        username: user1
      properties:
        id:
          example: 10
          format: int64
          type: integer
        username:
          example: user1
          type: string
        firstName:
          example: John
          type: string
        lastName:
          example: James
          type: string
        email:
          example: john@email.com
          type: string
        password:
          example: "12345"
          type: string
        bio:
          description: Descripcion resumida del perfil
          example: Esta es la descripcion de user1
          type: string
        role:
          description: Indica si el usuario es administrador
          example: User
          type: string
        country:
          description: Pais del usuario
          example: Spain
          type: string
        profilePicture:
          description: URL de la foto de perfil del usuario
          example: https://example.com/images/user1.jpg
          format: uri
          type: string
        birthdate:
          description: Fecha de nacimiento del usuario
          example: 1990-01-01
          format: date
          type: string
        uploadedVideos:
          description: Lista de IDs de videos subidos por el usuario
          items:
            example: 101
            format: int64
            type: integer
          type: array
        watchedVideos:
          description: Historial de videos vistos por el usuario
          items:
            example: 202
            format: int64
            type: integer
          type: array
        followers:
          description: Lista de IDs de usuarios que siguen a este usuario
          items:
            example: 15
            format: int64
            type: integer
          type: array
        following:
          description: Lista de IDs de usuarios a los que este usuario sigue
          items:
            example: 20
            format: int64
            type: integer
          type: array
      type: object
      xml:
        name: user
